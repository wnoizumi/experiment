Concern-overloadorg.apache.oodt.cas.workflow.engine -> [Wkf-topic-4, Wkf-topic-7];org.apache.oodt.cas.workflow.engine -> [Wkf-topic-4, Wkf-topic-7];[Dispersed Coupling -> TaskQuerier.persist, Feature Envy -> IterativeWorkflowProcessorThread.executeTaskLocally, Feature Envy -> ThreadPoolWorkflowEngine.persistWorkflowInstance, Feature Envy -> PrioritizedQueueBasedWorkflowEngine.getLifecycleForWorkflow, Feature Envy -> ThreadPoolWorkflowEngineFactory.getResmgrUrl]
Concern-overloadorg.apache.oodt.cas.workflow.examples -> [Wkf-topic-6, Wkf-topic-8];org.apache.oodt.cas.workflow.examples -> [Wkf-topic-6, Wkf-topic-8];[Dispersed Coupling -> ExternScriptTaskInstance.run, Dispersed Coupling -> FilterTask.run, Feature Envy -> NumIncrementTask.run, Feature Envy -> LongCondition.evaluate, Feature Envy -> RandomStatusUpdateTask.run, Feature Envy -> LongTask.run]
Concern-overloadorg.apache.oodt.cas.workflow.structs -> [Wkf-topic-3, Wkf-topic-2, Wkf-topic-1, Wkf-topic-8];org.apache.oodt.cas.workflow.structs -> [Wkf-topic-3, Wkf-topic-2, Wkf-topic-1, Wkf-topic-8];[Feature Envy -> FILOPrioritySorter.sort, Feature Envy -> HighestPrioritySorter.sort, Shotgun Surgery -> WorkflowInstance.setPriority, Shotgun Surgery -> ParentChildWorkflow.getGraph, Shotgun Surgery -> WorkflowInstancePage.getPageWorkflows, Shotgun Surgery -> WorkflowTaskConfiguration.getProperties, Shotgun Surgery -> Priority.getValue, Shotgun Surgery -> Graph.getExecutionType, Shotgun Surgery -> WorkflowCondition.isOptional, Shotgun Surgery -> WorkflowTask.setConditions, Shotgun Surgery -> Workflow.getTasks]
Concern-overloadorg.apache.oodt.cas.workflow.lifecycle -> [Wkf-topic-6, Wkf-topic-5];org.apache.oodt.cas.workflow.lifecycle -> [Wkf-topic-6, Wkf-topic-5];[Dispersed Coupling -> WorkflowLifecycleManager.getLifecycleForWorkflow, Dispersed Coupling -> WorkflowLifecyclesReader.readStates, Feature Envy -> WorkflowLifecycle.makeCopy, Shotgun Surgery -> WorkflowLifecycleStage.getName, Shotgun Surgery -> WorkflowState.getCategory]
Concern-overloadorg.apache.oodt.cas.workflow.instrepo -> [Wkf-topic-3, Wkf-topic-6, Wkf-topic-5];org.apache.oodt.cas.workflow.instrepo -> [Wkf-topic-3, Wkf-topic-6, Wkf-topic-5];[Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstanceMetadata, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> LuceneWorkflowInstanceRepository.toConditions, Feature Envy -> WorkflowInstanceMetadataReader.readFields, Intensive Coupling -> AbstractPaginatibleInstanceRepository.getPagedWorkflows, Shotgun Surgery -> WorkflowInstanceRepository.getWorkflowInstanceById]
Concern-overloadorg.apache.oodt.cas.workflow.repository -> [Wkf-topic-0, Wkf-topic-6, Wkf-topic-8];org.apache.oodt.cas.workflow.repository -> [Wkf-topic-0, Wkf-topic-6, Wkf-topic-8];[Feature Envy -> XMLWorkflowRepository.getGlobalWorkflowConditionsTask, Feature Envy -> DataSourceWorkflowRepositoryFactory.DataSourceWorkflowRepositoryFactory, Feature Envy -> DataSourceWorkflowRepository.handleGlobalWorkflowConditions, Feature Envy -> PackagedWorkflowRepository.getGlobalWorkflowConditionsTask]
HierarchicalFeature EnvyAbstractPaginatibleInstanceRepository;Feature Envy -> AbstractPaginatibleInstanceRepository;[Feature Envy -> LuceneWorkflowInstanceRepository.getWorkflowInstanceById, Feature Envy -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Feature Envy -> MemoryWorkflowInstanceRepository.paginateWorkflows]
HierarchicalDispersed CouplingXmlRpcWorkflowManagerClient;Dispersed Coupling -> XmlRpcWorkflowManagerClient;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflows]
HierarchicalFeature EnvyWorkflowProcessorQueue;Feature Envy -> WorkflowProcessorQueue;[Feature Envy -> WorkflowProcessorQueue.getLifecycle, Feature Envy -> MockProcessorQueue.getProcessors]
HierarchicalShotgun SurgeryWorkflow;Shotgun Surgery -> Workflow;[Shotgun Surgery -> Workflow.setTasks, Shotgun Surgery -> Workflow.getConditions, Shotgun Surgery -> ParentChildWorkflow.getGraph, Shotgun Surgery -> Workflow.setConditions, Shotgun Surgery -> Workflow.setId, Shotgun Surgery -> Workflow.getId, Shotgun Surgery -> Workflow.getTasks, Shotgun Surgery -> Workflow.setName, Shotgun Surgery -> Workflow.getName]
HierarchicalFeature EnvyXmlRpcWorkflowManagerClient;Feature Envy -> XmlRpcWorkflowManagerClient;[Feature Envy -> XmlRpcWorkflowManagerClient.updateMetadataForWorkflow, Feature Envy -> MockXmlRpcWorkflowManagerClient.getWorkflowInstanceById, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getPrevPage, Feature Envy -> XmlRpcWorkflowManagerClient.updateWorkflowInstance, Feature Envy -> MockXmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getLastPage, Feature Envy -> XmlRpcWorkflowManagerClient.sendEvent, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Feature Envy -> XmlRpcWorkflowManagerClient.executeDynamicWorkflow, Feature Envy -> MockXmlRpcWorkflowManagerClient.getFirstPage, Feature Envy -> XmlRpcWorkflowManagerClient.getFirstPage, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstanceById, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflows, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowById, Feature Envy -> XmlRpcWorkflowManagerClient.getConditionById, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getTaskById, Feature Envy -> XmlRpcWorkflowManagerClient.getNextPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.getNextPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.getLastPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Feature Envy -> MockXmlRpcWorkflowManagerClient.getPrevPage]
HierarchicalDispersed CouplingWorkflowProcessor;Dispersed Coupling -> WorkflowProcessor;[Dispersed Coupling -> TaskProcessor.getRunnableWorkflowProcessors, Dispersed Coupling -> WorkflowProcessor.isDone]
HierarchicalFeature EnvyWorkflowProcessor;Feature Envy -> WorkflowProcessor;[Feature Envy -> ConditionProcessor.setWorkflowInstance, Feature Envy -> TaskProcessor.setWorkflowInstance]
HierarchicalRefused Parent BequestAbstractPaginatibleInstanceRepository;Refused Parent Bequest -> AbstractPaginatibleInstanceRepository;[Refused Parent Bequest -> MemoryWorkflowInstanceRepository, Refused Parent Bequest -> LuceneWorkflowInstanceRepository, Refused Parent Bequest -> DataSourceWorkflowInstanceRepository]
HierarchicalDispersed CouplingAbstractPaginatibleInstanceRepository;Dispersed Coupling -> AbstractPaginatibleInstanceRepository;[Dispersed Coupling -> MemoryWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstanceMetadata, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addConditionsToDoc, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addTasksToDoc, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addMetadataValue, Dispersed Coupling -> LuceneWorkflowInstanceRepository.toConditions, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceById, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstance, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addInstanceMetadataToDoc, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> LuceneWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceMetadata]
HierarchicalDispersed CouplingTaskQuerier;Dispersed Coupling -> TaskQuerier;[Dispersed Coupling -> TaskQuerier.persist, Dispersed Coupling -> TaskQuerier.run]
HierarchicalTradition BreakerAbstractPaginatibleInstanceRepository;Tradition Breaker -> AbstractPaginatibleInstanceRepository;[Tradition Breaker -> LuceneWorkflowInstanceRepository, Tradition Breaker -> DataSourceWorkflowInstanceRepository]
HierarchicalIntensive CouplingAbstractPaginatibleInstanceRepository;Intensive Coupling -> AbstractPaginatibleInstanceRepository;[Intensive Coupling -> LuceneWorkflowInstanceRepository.toWorkflowInstance, Intensive Coupling -> LuceneWorkflowInstanceRepository.toDoc, Intensive Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstance, Intensive Coupling -> AbstractPaginatibleInstanceRepository.getPagedWorkflows, Intensive Coupling -> DataSourceWorkflowInstanceRepository.updateWorkflowInstance]
Intra-classInstanceRepoCleaner;InstanceRepoCleaner;[Dispersed Coupling -> InstanceRepoCleaner.cleanRepository, Feature Envy -> InstanceRepoCleaner.main]
Intra-classWorkflowProcessorQueue;WorkflowProcessorQueue;[Brain Method -> WorkflowProcessorQueue.fromWorkflowInstance, Dispersed Coupling -> WorkflowProcessorQueue.getProcessors, Feature Envy -> WorkflowProcessorQueue.getLifecycle, Intensive Coupling -> WorkflowProcessorQueue.fromWorkflowInstance]
Intra-classTestInstanceRepoCleaner;TestInstanceRepoCleaner;[Dispersed Coupling -> TestInstanceRepoCleaner.testClean, Feature Envy -> TestInstanceRepoCleaner.setUp]
Intra-classDbStructFactory;DbStructFactory;[Feature Envy -> DbStructFactory.getWorkflowCondition, Feature Envy -> DbStructFactory.getWorkflow, Feature Envy -> DbStructFactory.getWorkflowTask, Intensive Coupling -> DbStructFactory.getWorkflowCondition]
Intra-classWorkflowLifecycleManager;WorkflowLifecycleManager;[Dispersed Coupling -> WorkflowLifecycleManager.getLifecycleForWorkflow, Feature Envy -> WorkflowLifecycleManager.getStage, Shotgun Surgery -> WorkflowLifecycleManager.getDefaultLifecycle]
Intra-classTestFilterTask;TestFilterTask;[Feature Envy -> TestFilterTask.testRename, Feature Envy -> TestFilterTask.testRenameToKeyWithExistingValues]
Intra-classXmlStructFactory;XmlStructFactory;[Dispersed Coupling -> XmlStructFactory.getConfigurationAsMetadata, Dispersed Coupling -> XmlStructFactory.getConfiguration, Feature Envy -> XmlStructFactory.getRequiredMetFields, Feature Envy -> XmlStructFactory.getConfiguration, Feature Envy -> XmlStructFactory.getWorkflowCondition, Feature Envy -> XmlStructFactory.getSimpleElementText, Intensive Coupling -> XmlStructFactory.getTasks, Intensive Coupling -> XmlStructFactory.getConditions]
Intra-classWorkflowInstance;WorkflowInstance;[God Class -> WorkflowInstance, Shotgun Surgery -> WorkflowInstance.setPriority, Shotgun Surgery -> WorkflowInstance.setState, Shotgun Surgery -> WorkflowInstance.getId, Shotgun Surgery -> WorkflowInstance.setId, Shotgun Surgery -> WorkflowInstance.setCurrentTaskId, Shotgun Surgery -> WorkflowInstance.getSharedContext, Shotgun Surgery -> WorkflowInstance.getState, Shotgun Surgery -> WorkflowInstance.getStatus, Shotgun Surgery -> WorkflowInstance.setWorkflow, Shotgun Surgery -> WorkflowInstance.setSharedContext, Shotgun Surgery -> WorkflowInstance.getParentChildWorkflow, Shotgun Surgery -> WorkflowInstance.setStatus, Shotgun Surgery -> WorkflowInstance.getWorkflow, Shotgun Surgery -> WorkflowInstance.getPriority, Shotgun Surgery -> WorkflowInstance.getCurrentTaskId]
Intra-classMemoryWorkflowInstanceRepository;MemoryWorkflowInstanceRepository;[Dispersed Coupling -> MemoryWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Feature Envy -> MemoryWorkflowInstanceRepository.paginateWorkflows, Refused Parent Bequest -> MemoryWorkflowInstanceRepository]
Intra-classLuceneWorkflowInstanceRepository;LuceneWorkflowInstanceRepository;[Dispersed Coupling -> LuceneWorkflowInstanceRepository.addConditionsToDoc, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addInstanceMetadataToDoc, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addTasksToDoc, Dispersed Coupling -> LuceneWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> LuceneWorkflowInstanceRepository.toConditions, Feature Envy -> LuceneWorkflowInstanceRepository.getWorkflowInstanceById, God Class -> LuceneWorkflowInstanceRepository, Intensive Coupling -> LuceneWorkflowInstanceRepository.toWorkflowInstance, Intensive Coupling -> LuceneWorkflowInstanceRepository.toDoc, Refused Parent Bequest -> LuceneWorkflowInstanceRepository, Tradition Breaker -> LuceneWorkflowInstanceRepository]
Intra-classXMLWorkflowRepository;XMLWorkflowRepository;[Dispersed Coupling -> XMLWorkflowRepository.addWorkflow, Dispersed Coupling -> XMLWorkflowRepository.loadEvents, Dispersed Coupling -> XMLWorkflowRepository.addTask, Dispersed Coupling -> XMLWorkflowRepository.loadWorkflows, Dispersed Coupling -> XMLWorkflowRepository.loadTasks, Dispersed Coupling -> XMLWorkflowRepository.loadConditions, Feature Envy -> XMLWorkflowRepository.getGlobalWorkflowConditionsTask, Feature Envy -> XMLWorkflowRepository.addTask, God Class -> XMLWorkflowRepository, Intensive Coupling -> XMLWorkflowRepository.main]
Intra-classGraph;Graph;[Dispersed Coupling -> Graph.Graph, God Class -> Graph, Shotgun Surgery -> Graph.getExecutionType]
Intra-classPackagedWorkflowRepository;PackagedWorkflowRepository;[Brain Class -> PackagedWorkflowRepository, Brain Method -> PackagedWorkflowRepository.expandWorkflowTasksAndConditions, Dispersed Coupling -> PackagedWorkflowRepository.loadGraphs, Dispersed Coupling -> PackagedWorkflowRepository.addTask, Dispersed Coupling -> PackagedWorkflowRepository.computeWorkflowConditions, Dispersed Coupling -> PackagedWorkflowRepository.loadConfiguration, Feature Envy -> PackagedWorkflowRepository.getGlobalWorkflowConditionsTask, Feature Envy -> PackagedWorkflowRepository.addTask, Feature Envy -> PackagedWorkflowRepository.generateRedirector, Feature Envy -> PackagedWorkflowRepository.getChildrenByTagName, God Class -> PackagedWorkflowRepository, Intensive Coupling -> PackagedWorkflowRepository.addWorkflow, Intensive Coupling -> PackagedWorkflowRepository.computeEvents, Intensive Coupling -> PackagedWorkflowRepository.expandWorkflowTasksAndConditions]
Intra-classThreadPoolWorkflowEngine;ThreadPoolWorkflowEngine;[Feature Envy -> ThreadPoolWorkflowEngine.resumeWorkflowInstance, Feature Envy -> ThreadPoolWorkflowEngine.persistWorkflowInstance, Feature Envy -> ThreadPoolWorkflowEngine.getWallClockMinutes, God Class -> ThreadPoolWorkflowEngine]
Intra-classXmlRpcStructFactory;XmlRpcStructFactory;[Feature Envy -> XmlRpcStructFactory.getWorkflowConditionFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowTaskConfiguration, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflow, Feature Envy -> XmlRpcStructFactory.getWorkflowFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getWorkflowTaskFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowCondition, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowTask, Feature Envy -> XmlRpcStructFactory.getWorkflowInstancePageFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowInstancePage, God Class -> XmlRpcStructFactory]
Intra-classWorkflowProcessorHelper;WorkflowProcessorHelper;[Data Class -> WorkflowProcessorHelper, Dispersed Coupling -> WorkflowProcessorHelper.findSkeleton, Dispersed Coupling -> WorkflowProcessorHelper.toString, Feature Envy -> WorkflowProcessorHelper.toTasks, Feature Envy -> WorkflowProcessorHelper.getHostName, Feature Envy -> WorkflowProcessorHelper.getLifecycle, God Class -> WorkflowProcessorHelper]
Intra-classWorkflowLifecyclesReader;WorkflowLifecyclesReader;[Dispersed Coupling -> WorkflowLifecyclesReader.addStagesToLifecycle, Dispersed Coupling -> WorkflowLifecyclesReader.readStates, Feature Envy -> WorkflowLifecyclesReader.readLifecycle]
Intra-classTestWorkflowRepository;TestWorkflowRepository;[Dispersed Coupling -> TestWorkflowRepository.testMultipleConditions, Feature Envy -> TestWorkflowRepository.validateBackwardsWorkflowTasks, Feature Envy -> TestWorkflowRepository.validateTaskCondition, Feature Envy -> TestWorkflowRepository.validateTaskConfiguration, Feature Envy -> TestWorkflowRepository.validateBackwardsWorkflow, Feature Envy -> TestWorkflowRepository.testGetWorkflowsForEvent]
Intra-classWorkflowLifecycle;WorkflowLifecycle;[Feature Envy -> WorkflowLifecycle.createState, Feature Envy -> WorkflowLifecycle.makeCopy, Shotgun Surgery -> WorkflowLifecycle.createState]
Intra-classDataSourceWorkflowRepository;DataSourceWorkflowRepository;[Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByTaskName, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByWorkflowId, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowByName, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowTaskById, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflows, Dispersed Coupling -> DataSourceWorkflowRepository.getTasksByWorkflowName, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByTaskId, Dispersed Coupling -> DataSourceWorkflowRepository.commitWorkflow, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowConditionById, Dispersed Coupling -> DataSourceWorkflowRepository.commitTask, Dispersed Coupling -> DataSourceWorkflowRepository.getTaskById, Dispersed Coupling -> DataSourceWorkflowRepository.getRegisteredEvents, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowsForEvent, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowById, Dispersed Coupling -> DataSourceWorkflowRepository.getTasks, Dispersed Coupling -> DataSourceWorkflowRepository.getConditions, Dispersed Coupling -> DataSourceWorkflowRepository.getConfigurationByTaskId, Dispersed Coupling -> DataSourceWorkflowRepository.getConfigurationByConditionId, Dispersed Coupling -> DataSourceWorkflowRepository.getTasksByWorkflowId, Feature Envy -> DataSourceWorkflowRepository.handleGlobalWorkflowConditions, Feature Envy -> DataSourceWorkflowRepository.addTask]
Intra-classWorkflowCondition;WorkflowCondition;[Shotgun Surgery -> WorkflowCondition.getConditionName, Shotgun Surgery -> WorkflowCondition.getTimeoutSeconds, Shotgun Surgery -> WorkflowCondition.setConditionId, Shotgun Surgery -> WorkflowCondition.getConditionInstanceClassName, Shotgun Surgery -> WorkflowCondition.isOptional, Shotgun Surgery -> WorkflowCondition.setConditionInstanceClassName, Shotgun Surgery -> WorkflowCondition.setConditionName, Shotgun Surgery -> WorkflowCondition.getConditionId]
Intra-classPrioritizedQueueBasedWorkflowEngine;PrioritizedQueueBasedWorkflowEngine;[Feature Envy -> PrioritizedQueueBasedWorkflowEngine.getLifecycleForWorkflow, Feature Envy -> PrioritizedQueueBasedWorkflowEngine.persist]
Intra-classMockWorkflowRepository;MockWorkflowRepository;[Dispersed Coupling -> MockWorkflowRepository.addTask, Feature Envy -> MockWorkflowRepository.addTask]
Intra-classTaskProcessor;TaskProcessor;[Dispersed Coupling -> TaskProcessor.getRunnableWorkflowProcessors, Feature Envy -> TaskProcessor.setWorkflowInstance, Refused Parent Bequest -> TaskProcessor]
Intra-classWorkflowInstancePage;WorkflowInstancePage;[Shotgun Surgery -> WorkflowInstancePage.getPageNum, Shotgun Surgery -> WorkflowInstancePage.getPageWorkflows]
Intra-classWorkflowTaskConfiguration;WorkflowTaskConfiguration;[Shotgun Surgery -> WorkflowTaskConfiguration.getProperties, Shotgun Surgery -> WorkflowTaskConfiguration.getProperty, Shotgun Surgery -> WorkflowTaskConfiguration.addConfigProperty]
Intra-classDataSourceWorkflowInstanceRepository;DataSourceWorkflowInstanceRepository;[Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addMetadataValue, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceById, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstance, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceMetadata, Feature Envy -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Intensive Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstance, Intensive Coupling -> DataSourceWorkflowInstanceRepository.updateWorkflowInstance, Refused Parent Bequest -> DataSourceWorkflowInstanceRepository, Tradition Breaker -> DataSourceWorkflowInstanceRepository]
Intra-classIterativeWorkflowProcessorThread;IterativeWorkflowProcessorThread;[Brain Method -> IterativeWorkflowProcessorThread.run, Dispersed Coupling -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Dispersed Coupling -> IterativeWorkflowProcessorThread.getTaskNameById, Dispersed Coupling -> IterativeWorkflowProcessorThread.satisfied, Feature Envy -> IterativeWorkflowProcessorThread.executeTaskLocally, Feature Envy -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Intensive Coupling -> IterativeWorkflowProcessorThread.run]
Intra-classWorkflowState;WorkflowState;[Shotgun Surgery -> WorkflowState.getName, Shotgun Surgery -> WorkflowState.getCategory]
Intra-classWorkflowInstanceMetadataReader;WorkflowInstanceMetadataReader;[Dispersed Coupling -> WorkflowInstanceMetadataReader.parseMetMapFile, Feature Envy -> WorkflowInstanceMetadataReader.readFields]
Intra-classParentChildWorkflow;ParentChildWorkflow;[Feature Envy -> ParentChildWorkflow.ParentChildWorkflow, Intensive Coupling -> ParentChildWorkflow.toString, Shotgun Surgery -> ParentChildWorkflow.getGraph]
Intra-classWorkflowProcessor;WorkflowProcessor;[Dispersed Coupling -> WorkflowProcessor.isDone, God Class -> WorkflowProcessor, Shotgun Surgery -> WorkflowProcessor.getWorkflowInstance]
Intra-classMockXmlRpcWorkflowManagerClient;MockXmlRpcWorkflowManagerClient;[Feature Envy -> MockXmlRpcWorkflowManagerClient.getWorkflowInstanceById, Feature Envy -> MockXmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> MockXmlRpcWorkflowManagerClient.getPrevPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.getFirstPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> MockXmlRpcWorkflowManagerClient.getLastPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.getNextPage]
Intra-classTestXmlRpcWorkflowManagerClient;TestXmlRpcWorkflowManagerClient;[Dispersed Coupling -> TestXmlRpcWorkflowManagerClient.testGetWorkflowInstanceMetadata, Intensive Coupling -> TestXmlRpcWorkflowManagerClient.TestXmlRpcWorkflowManagerClient]
Intra-classTaskQuerier;TaskQuerier;[Dispersed Coupling -> TaskQuerier.persist, Dispersed Coupling -> TaskQuerier.run]
Intra-classTestWorkflowLifecycleManager;TestWorkflowLifecycleManager;[Dispersed Coupling -> TestWorkflowLifecycleManager.testReadOldStateFormat, Dispersed Coupling -> TestWorkflowLifecycleManager.testReadNewStateFormat, Feature Envy -> TestWorkflowLifecycleManager.testPctCompleteWengineStages]
Intra-classTestWorkflowCli;TestWorkflowCli;[Feature Envy -> TestWorkflowCli.testGetWorkflows, Feature Envy -> TestWorkflowCli.testGetWorkflowInsts, Feature Envy -> TestWorkflowCli.testGetRegisteredEvents]
Intra-classWorkflow;Workflow;[Shotgun Surgery -> Workflow.setTasks, Shotgun Surgery -> Workflow.getConditions, Shotgun Surgery -> Workflow.setConditions, Shotgun Surgery -> Workflow.setId, Shotgun Surgery -> Workflow.getId, Shotgun Surgery -> Workflow.getTasks, Shotgun Surgery -> Workflow.setName, Shotgun Surgery -> Workflow.getName]
Intra-classGenericWorkflowObjectFactory;GenericWorkflowObjectFactory;[Feature Envy -> GenericWorkflowObjectFactory.getPrioritySorterFromClassName, Feature Envy -> GenericWorkflowObjectFactory.copyTask, Feature Envy -> GenericWorkflowObjectFactory.getTaskObjectFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getEngineRunnerFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getConditionObjectFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowInstanceRepositoryFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowObjectFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowEngineFromClassName, Feature Envy -> GenericWorkflowObjectFactory.copyCondition, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowRepositoryFromClassName, God Class -> GenericWorkflowObjectFactory]
Intra-classXmlRpcWorkflowManagerClient;XmlRpcWorkflowManagerClient;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflows, Feature Envy -> XmlRpcWorkflowManagerClient.updateMetadataForWorkflow, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getPrevPage, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowById, Feature Envy -> XmlRpcWorkflowManagerClient.getConditionById, Feature Envy -> XmlRpcWorkflowManagerClient.updateWorkflowInstance, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getTaskById, Feature Envy -> XmlRpcWorkflowManagerClient.getNextPage, Feature Envy -> XmlRpcWorkflowManagerClient.getLastPage, Feature Envy -> XmlRpcWorkflowManagerClient.sendEvent, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Feature Envy -> XmlRpcWorkflowManagerClient.executeDynamicWorkflow, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstanceById, Feature Envy -> XmlRpcWorkflowManagerClient.getFirstPage, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflows]
Intra-classXmlRpcWorkflowManager;XmlRpcWorkflowManager;[Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowsByEvent, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowInstances, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManager.handleEvent, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflows, Dispersed Coupling -> XmlRpcWorkflowManager.populateWorkflows, Dispersed Coupling -> XmlRpcWorkflowManager.executeDynamicWorkflow, Feature Envy -> XmlRpcWorkflowManager.loadProperties]
Intra-classWorkflowTask;WorkflowTask;[Shotgun Surgery -> WorkflowTask.setTaskId, Shotgun Surgery -> WorkflowTask.setTaskName, Shotgun Surgery -> WorkflowTask.setTaskInstanceClassName, Shotgun Surgery -> WorkflowTask.getTaskInstanceClassName, Shotgun Surgery -> WorkflowTask.getTaskName, Shotgun Surgery -> WorkflowTask.getTaskId, Shotgun Surgery -> WorkflowTask.getTaskConfig, Shotgun Surgery -> WorkflowTask.setConditions, Shotgun Surgery -> WorkflowTask.getConditions, Shotgun Surgery -> WorkflowTask.setTaskConfig]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.engine;Dispersed Coupling -> org.apache.oodt.cas.workflow.engine;[Dispersed Coupling -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Dispersed Coupling -> TaskQuerier.persist, Dispersed Coupling -> IterativeWorkflowProcessorThread.getTaskNameById, Dispersed Coupling -> TaskQuerier.run, Dispersed Coupling -> IterativeWorkflowProcessorThread.satisfied]
Intra-componentIntensive Couplingorg.apache.oodt.cas.workflow.instrepo;Intensive Coupling -> org.apache.oodt.cas.workflow.instrepo;[Intensive Coupling -> LuceneWorkflowInstanceRepository.toWorkflowInstance, Intensive Coupling -> LuceneWorkflowInstanceRepository.toDoc, Intensive Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstance, Intensive Coupling -> AbstractPaginatibleInstanceRepository.getPagedWorkflows, Intensive Coupling -> DataSourceWorkflowInstanceRepository.updateWorkflowInstance]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.engine;Feature Envy -> org.apache.oodt.cas.workflow.engine;[Feature Envy -> IterativeWorkflowProcessorThread.executeTaskLocally, Feature Envy -> ThreadPoolWorkflowEngine.resumeWorkflowInstance, Feature Envy -> ThreadPoolWorkflowEngine.persistWorkflowInstance, Feature Envy -> ThreadPoolWorkflowEngine.getWallClockMinutes, Feature Envy -> PrioritizedQueueBasedWorkflowEngine.getLifecycleForWorkflow, Feature Envy -> ThreadPoolWorkflowEngineFactory.getResmgrUrl, Feature Envy -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Feature Envy -> PrioritizedQueueBasedWorkflowEngine.persist]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.repository;Dispersed Coupling -> org.apache.oodt.cas.workflow.repository;[Dispersed Coupling -> PackagedWorkflowRepository.loadGraphs, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowByName, Dispersed Coupling -> XMLWorkflowRepository.loadTasks, Dispersed Coupling -> DataSourceWorkflowRepository.getTasksByWorkflowName, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByTaskId, Dispersed Coupling -> DataSourceWorkflowRepository.commitWorkflow, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowConditionById, Dispersed Coupling -> DataSourceWorkflowRepository.commitTask, Dispersed Coupling -> PackagedWorkflowRepository.computeWorkflowConditions, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowsForEvent, Dispersed Coupling -> DataSourceWorkflowRepository.getRegisteredEvents, Dispersed Coupling -> DataSourceWorkflowRepository.getTasks, Dispersed Coupling -> DataSourceWorkflowRepository.getConditions, Dispersed Coupling -> DataSourceWorkflowRepository.getTasksByWorkflowId, Dispersed Coupling -> XMLWorkflowRepository.loadConditions, Dispersed Coupling -> XMLWorkflowRepository.loadEvents, Dispersed Coupling -> XMLWorkflowRepository.addTask, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByTaskName, Dispersed Coupling -> XMLWorkflowRepository.loadWorkflows, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByWorkflowId, Dispersed Coupling -> PackagedWorkflowRepository.addTask, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowTaskById, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflows, Dispersed Coupling -> XMLWorkflowRepository.addWorkflow, Dispersed Coupling -> DataSourceWorkflowRepository.getTaskById, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowById, Dispersed Coupling -> PackagedWorkflowRepository.loadConfiguration, Dispersed Coupling -> DataSourceWorkflowRepository.getConfigurationByTaskId, Dispersed Coupling -> DataSourceWorkflowRepository.getConfigurationByConditionId]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.system;Dispersed Coupling -> org.apache.oodt.cas.workflow.system;[Dispersed Coupling -> TestXmlRpcWorkflowManagerClient.testGetWorkflowInstanceMetadata, Dispersed Coupling -> TestXmlRpcWorkflowManager.startXmlRpcWorkflowManager]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.system;Feature Envy -> org.apache.oodt.cas.workflow.system;[Feature Envy -> MockXmlRpcWorkflowManagerClient.getWorkflowInstanceById, Feature Envy -> MockXmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> MockXmlRpcWorkflowManagerClient.getPrevPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.getFirstPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> MockXmlRpcWorkflowManagerClient.getLastPage, Feature Envy -> MockXmlRpcWorkflowManagerClient.getNextPage]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.lifecycle;Dispersed Coupling -> org.apache.oodt.cas.workflow.lifecycle;[Dispersed Coupling -> WorkflowLifecyclesReader.addStagesToLifecycle, Dispersed Coupling -> WorkflowLifecycleManager.getLifecycleForWorkflow, Dispersed Coupling -> WorkflowLifecyclesReader.readStates]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.engine.processor;Feature Envy -> org.apache.oodt.cas.workflow.engine.processor;[Feature Envy -> WorkflowProcessorHelper.toTasks, Feature Envy -> ConditionProcessor.setWorkflowInstance, Feature Envy -> WorkflowProcessorQueue.getLifecycle, Feature Envy -> WorkflowProcessorHelper.getHostName, Feature Envy -> WorkflowProcessorHelper.getLifecycle, Feature Envy -> TaskProcessor.setWorkflowInstance]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.system;Feature Envy -> org.apache.oodt.cas.workflow.system;[Feature Envy -> XmlRpcWorkflowManagerClient.updateMetadataForWorkflow, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManager.loadProperties, Feature Envy -> XmlRpcWorkflowManagerClient.getPrevPage, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowById, Feature Envy -> XmlRpcWorkflowManagerClient.getConditionById, Feature Envy -> XmlRpcWorkflowManagerClient.updateWorkflowInstance, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getTaskById, Feature Envy -> XmlRpcWorkflowManagerClient.getNextPage, Feature Envy -> XmlRpcWorkflowManagerClient.getLastPage, Feature Envy -> XmlRpcWorkflowManagerClient.sendEvent, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Feature Envy -> XmlRpcWorkflowManagerClient.executeDynamicWorkflow, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstanceById, Feature Envy -> XmlRpcWorkflowManagerClient.getFirstPage, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflows]
Intra-componentGod Classorg.apache.oodt.cas.workflow.repository;God Class -> org.apache.oodt.cas.workflow.repository;[God Class -> PackagedWorkflowRepository, God Class -> XMLWorkflowRepository]
Intra-componentGod Classorg.apache.oodt.cas.workflow.engine.processor;God Class -> org.apache.oodt.cas.workflow.engine.processor;[God Class -> WorkflowProcessor, God Class -> WorkflowProcessorHelper]
Intra-componentShotgun Surgeryorg.apache.oodt.cas.workflow.lifecycle;Shotgun Surgery -> org.apache.oodt.cas.workflow.lifecycle;[Shotgun Surgery -> WorkflowLifecycle.createState, Shotgun Surgery -> WorkflowLifecycleStage.getName, Shotgun Surgery -> WorkflowLifecycleManager.getDefaultLifecycle, Shotgun Surgery -> WorkflowState.getName, Shotgun Surgery -> WorkflowState.getCategory]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.util;Dispersed Coupling -> org.apache.oodt.cas.workflow.util;[Dispersed Coupling -> XmlStructFactory.getConfigurationAsMetadata, Dispersed Coupling -> XmlStructFactory.getConfiguration]
Intra-componentGod Classorg.apache.oodt.cas.workflow.util;God Class -> org.apache.oodt.cas.workflow.util;[God Class -> XmlRpcStructFactory, God Class -> GenericWorkflowObjectFactory]
Intra-componentShotgun Surgeryorg.apache.oodt.cas.workflow.structs;Shotgun Surgery -> org.apache.oodt.cas.workflow.structs;[Shotgun Surgery -> WorkflowCondition.getConditionName, Shotgun Surgery -> WorkflowTask.setTaskName, Shotgun Surgery -> WorkflowTask.setTaskInstanceClassName, Shotgun Surgery -> WorkflowInstance.setState, Shotgun Surgery -> WorkflowTask.getTaskName, Shotgun Surgery -> WorkflowInstance.setId, Shotgun Surgery -> WorkflowTask.getTaskId, Shotgun Surgery -> WorkflowInstance.setCurrentTaskId, Shotgun Surgery -> Graph.getExecutionType, Shotgun Surgery -> WorkflowInstance.getSharedContext, Shotgun Surgery -> WorkflowInstance.getState, Shotgun Surgery -> WorkflowTask.getConditions, Shotgun Surgery -> Workflow.setName, Shotgun Surgery -> WorkflowCondition.setConditionName, Shotgun Surgery -> WorkflowTask.setTaskId, Shotgun Surgery -> WorkflowInstance.setWorkflow, Shotgun Surgery -> Workflow.setTasks, Shotgun Surgery -> WorkflowInstance.setSharedContext, Shotgun Surgery -> Workflow.setConditions, Shotgun Surgery -> WorkflowCondition.getTimeoutSeconds, Shotgun Surgery -> WorkflowCondition.setConditionId, Shotgun Surgery -> WorkflowInstance.getWorkflow, Shotgun Surgery -> WorkflowInstance.getPriority, Shotgun Surgery -> WorkflowInstance.getCurrentTaskId, Shotgun Surgery -> WorkflowTaskConfiguration.getProperty, Shotgun Surgery -> WorkflowCondition.isOptional, Shotgun Surgery -> WorkflowCondition.setConditionInstanceClassName, Shotgun Surgery -> WorkflowTask.getTaskConfig, Shotgun Surgery -> WorkflowTask.setConditions, Shotgun Surgery -> WorkflowTask.setTaskConfig, Shotgun Surgery -> WorkflowInstance.setPriority, Shotgun Surgery -> ParentChildWorkflow.getGraph, Shotgun Surgery -> WorkflowInstance.getId, Shotgun Surgery -> WorkflowInstancePage.getPageWorkflows, Shotgun Surgery -> WorkflowCondition.getConditionInstanceClassName, Shotgun Surgery -> Priority.getValue, Shotgun Surgery -> Workflow.getTasks, Shotgun Surgery -> WorkflowCondition.getConditionId, Shotgun Surgery -> WorkflowInstance.getStatus, Shotgun Surgery -> WorkflowInstancePage.getPageNum, Shotgun Surgery -> Workflow.getConditions, Shotgun Surgery -> WorkflowTask.getTaskInstanceClassName, Shotgun Surgery -> WorkflowInstance.getParentChildWorkflow, Shotgun Surgery -> Workflow.setId, Shotgun Surgery -> WorkflowInstance.setStatus, Shotgun Surgery -> WorkflowTaskConfiguration.getProperties, Shotgun Surgery -> Workflow.getId, Shotgun Surgery -> WorkflowTaskConfiguration.addConfigProperty, Shotgun Surgery -> Workflow.getName]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.instrepo;Feature Envy -> org.apache.oodt.cas.workflow.instrepo;[Feature Envy -> LuceneWorkflowInstanceRepository.getWorkflowInstanceById, Feature Envy -> WorkflowInstanceMetadataReader.readFields, Feature Envy -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Feature Envy -> MemoryWorkflowInstanceRepository.paginateWorkflows]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.examples;Feature Envy -> org.apache.oodt.cas.workflow.examples;[Feature Envy -> NumIncrementTask.run, Feature Envy -> LongCondition.evaluate, Feature Envy -> RandomStatusUpdateTask.run, Feature Envy -> LongTask.run]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.engine.processor;Dispersed Coupling -> org.apache.oodt.cas.workflow.engine.processor;[Dispersed Coupling -> TaskProcessor.getRunnableWorkflowProcessors, Dispersed Coupling -> WorkflowProcessorQueue.getProcessors, Dispersed Coupling -> WorkflowProcessorHelper.findSkeleton, Dispersed Coupling -> WorkflowProcessor.isDone, Dispersed Coupling -> WorkflowProcessorHelper.toString]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.examples;Dispersed Coupling -> org.apache.oodt.cas.workflow.examples;[Dispersed Coupling -> ExternScriptTaskInstance.run, Dispersed Coupling -> FilterTask.run]
Intra-componentGod Classorg.apache.oodt.cas.workflow.structs;God Class -> org.apache.oodt.cas.workflow.structs;[God Class -> Graph, God Class -> WorkflowInstance]
Intra-componentTradition Breakerorg.apache.oodt.cas.workflow.instrepo;Tradition Breaker -> org.apache.oodt.cas.workflow.instrepo;[Tradition Breaker -> LuceneWorkflowInstanceRepository, Tradition Breaker -> DataSourceWorkflowInstanceRepository]
Intra-componentIntensive Couplingorg.apache.oodt.cas.workflow.repository;Intensive Coupling -> org.apache.oodt.cas.workflow.repository;[Intensive Coupling -> PackagedWorkflowRepository.computeEvents, Intensive Coupling -> PackagedWorkflowRepository.addWorkflow, Intensive Coupling -> PackagedWorkflowRepository.expandWorkflowTasksAndConditions, Intensive Coupling -> XMLWorkflowRepository.main]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.instrepo;Dispersed Coupling -> org.apache.oodt.cas.workflow.instrepo;[Dispersed Coupling -> LuceneWorkflowInstanceRepository.addConditionsToDoc, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstanceMetadata, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addTasksToDoc, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> LuceneWorkflowInstanceRepository.toConditions, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addMetadataValue, Dispersed Coupling -> WorkflowInstanceMetadataReader.parseMetMapFile, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceById, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstance, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addInstanceMetadataToDoc, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> LuceneWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceMetadata]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.system;Dispersed Coupling -> org.apache.oodt.cas.workflow.system;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowsByEvent, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowInstances, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManager.handleEvent, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflows, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflows, Dispersed Coupling -> XmlRpcWorkflowManager.populateWorkflows, Dispersed Coupling -> XmlRpcWorkflowManager.executeDynamicWorkflow]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.lifecycle;Dispersed Coupling -> org.apache.oodt.cas.workflow.lifecycle;[Dispersed Coupling -> TestWorkflowLifecycleManager.testReadOldStateFormat, Dispersed Coupling -> TestWorkflowLifecycleManager.testReadNewStateFormat]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.util;Feature Envy -> org.apache.oodt.cas.workflow.util;[Feature Envy -> XmlRpcStructFactory.getWorkflowConditionFromXmlRpc, Feature Envy -> GenericWorkflowObjectFactory.copyTask, Feature Envy -> GenericWorkflowObjectFactory.getEngineRunnerFromClassName, Feature Envy -> XmlStructFactory.getConfiguration, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowObjectFromClassName, Feature Envy -> XmlRpcStructFactory.getWorkflowInstancePageFromXmlRpc, Feature Envy -> GenericWorkflowObjectFactory.copyCondition, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowRepositoryFromClassName, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowTaskConfiguration, Feature Envy -> DbStructFactory.getWorkflowCondition, Feature Envy -> GenericWorkflowObjectFactory.getConditionObjectFromClassName, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowTask, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowCondition, Feature Envy -> GenericWorkflowObjectFactory.getPrioritySorterFromClassName, Feature Envy -> XmlStructFactory.getRequiredMetFields, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflow, Feature Envy -> XmlRpcStructFactory.getWorkflowFromXmlRpc, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowInstanceRepositoryFromClassName, Feature Envy -> XmlRpcStructFactory.getWorkflowTaskFromXmlRpc, Feature Envy -> XmlStructFactory.getSimpleElementText, Feature Envy -> DbStructFactory.getWorkflowTask, Feature Envy -> GenericWorkflowObjectFactory.getTaskObjectFromClassName, Feature Envy -> DbStructFactory.getWorkflow, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowEngineFromClassName, Feature Envy -> XmlStructFactory.getWorkflowCondition, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowInstancePage]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.lifecycle;Feature Envy -> org.apache.oodt.cas.workflow.lifecycle;[Feature Envy -> WorkflowLifecyclesReader.readLifecycle, Feature Envy -> WorkflowLifecycle.createState, Feature Envy -> WorkflowLifecycleManager.getStage, Feature Envy -> WorkflowLifecycle.makeCopy]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.engine;Feature Envy -> org.apache.oodt.cas.workflow.engine;[Feature Envy -> MockProcessorQueue.getProcessors, Feature Envy -> TestTaskQuerier.testGetNext]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.repository;Feature Envy -> org.apache.oodt.cas.workflow.repository;[Feature Envy -> XMLWorkflowRepository.getGlobalWorkflowConditionsTask, Feature Envy -> DataSourceWorkflowRepositoryFactory.DataSourceWorkflowRepositoryFactory, Feature Envy -> PackagedWorkflowRepository.addTask, Feature Envy -> XMLWorkflowRepository.addTask, Feature Envy -> PackagedWorkflowRepository.generateRedirector, Feature Envy -> DataSourceWorkflowRepository.addTask, Feature Envy -> DataSourceWorkflowRepository.handleGlobalWorkflowConditions, Feature Envy -> PackagedWorkflowRepository.getGlobalWorkflowConditionsTask, Feature Envy -> PackagedWorkflowRepository.getChildrenByTagName]
Intra-componentIntensive Couplingorg.apache.oodt.cas.workflow.util;Intensive Coupling -> org.apache.oodt.cas.workflow.util;[Intensive Coupling -> XmlStructFactory.getTasks, Intensive Coupling -> XmlStructFactory.getConditions, Intensive Coupling -> DbStructFactory.getWorkflowCondition]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.examples;Feature Envy -> org.apache.oodt.cas.workflow.examples;[Feature Envy -> TestFilterTask.testRename, Feature Envy -> TestFilterTask.testRenameToKeyWithExistingValues]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.structs;Feature Envy -> org.apache.oodt.cas.workflow.structs;[Feature Envy -> FILOPrioritySorter.sort, Feature Envy -> ParentChildWorkflow.ParentChildWorkflow, Feature Envy -> HighestPrioritySorter.sort]
Intra-componentRefused Parent Bequestorg.apache.oodt.cas.workflow.instrepo;Refused Parent Bequest -> org.apache.oodt.cas.workflow.instrepo;[Refused Parent Bequest -> MemoryWorkflowInstanceRepository, Refused Parent Bequest -> LuceneWorkflowInstanceRepository, Refused Parent Bequest -> DataSourceWorkflowInstanceRepository]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.repository;Feature Envy -> org.apache.oodt.cas.workflow.repository;[Feature Envy -> TestWorkflowRepository.validateBackwardsWorkflowTasks, Feature Envy -> TestWorkflowRepository.validateTaskCondition, Feature Envy -> TestWorkflowRepository.validateTaskConfiguration, Feature Envy -> TestWorkflowRepository.validateBackwardsWorkflow, Feature Envy -> MockWorkflowRepository.addTask, Feature Envy -> TestWorkflowRepository.testGetWorkflowsForEvent]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.repository;Dispersed Coupling -> org.apache.oodt.cas.workflow.repository;[Dispersed Coupling -> MockWorkflowRepository.addTask, Dispersed Coupling -> TestWorkflowRepository.testMultipleConditions]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.cli;Feature Envy -> org.apache.oodt.cas.workflow.cli;[Feature Envy -> TestWorkflowCli.testGetWorkflows, Feature Envy -> TestWorkflowCli.testGetWorkflowInsts, Feature Envy -> TestWorkflowCli.testGetRegisteredEvents]
Intra-methodXmlRpcWorkflowManagerClient.getWorkflowsByEvent;XmlRpcWorkflowManagerClient.getWorkflowsByEvent;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent]
Intra-methodMockWorkflowRepository.addTask;MockWorkflowRepository.addTask;[Dispersed Coupling -> MockWorkflowRepository.addTask, Feature Envy -> MockWorkflowRepository.addTask]
Intra-methodPackagedWorkflowRepository.addTask;PackagedWorkflowRepository.addTask;[Dispersed Coupling -> PackagedWorkflowRepository.addTask, Feature Envy -> PackagedWorkflowRepository.addTask]
Intra-methodIterativeWorkflowProcessorThread.checkTaskRequiredMetadata;IterativeWorkflowProcessorThread.checkTaskRequiredMetadata;[Dispersed Coupling -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Feature Envy -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata]
Intra-methodIterativeWorkflowProcessorThread.run;IterativeWorkflowProcessorThread.run;[Brain Method -> IterativeWorkflowProcessorThread.run, Intensive Coupling -> IterativeWorkflowProcessorThread.run]
Intra-methodXmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus;XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus]
Intra-methodXmlRpcWorkflowManagerClient.getWorkflowInstances;XmlRpcWorkflowManagerClient.getWorkflowInstances;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstances]
Intra-methodWorkflowProcessorQueue.fromWorkflowInstance;WorkflowProcessorQueue.fromWorkflowInstance;[Brain Method -> WorkflowProcessorQueue.fromWorkflowInstance, Intensive Coupling -> WorkflowProcessorQueue.fromWorkflowInstance]
Intra-methodPackagedWorkflowRepository.expandWorkflowTasksAndConditions;PackagedWorkflowRepository.expandWorkflowTasksAndConditions;[Brain Method -> PackagedWorkflowRepository.expandWorkflowTasksAndConditions, Intensive Coupling -> PackagedWorkflowRepository.expandWorkflowTasksAndConditions]
Intra-methodDbStructFactory.getWorkflowCondition;DbStructFactory.getWorkflowCondition;[Feature Envy -> DbStructFactory.getWorkflowCondition, Intensive Coupling -> DbStructFactory.getWorkflowCondition]
Intra-methodWorkflowLifecycle.createState;WorkflowLifecycle.createState;[Feature Envy -> WorkflowLifecycle.createState, Shotgun Surgery -> WorkflowLifecycle.createState]
Intra-methodDataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata;DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata;[Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Feature Envy -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata]
Intra-methodXmlStructFactory.getConfiguration;XmlStructFactory.getConfiguration;[Dispersed Coupling -> XmlStructFactory.getConfiguration, Feature Envy -> XmlStructFactory.getConfiguration]
Intra-methodXmlRpcWorkflowManagerClient.getWorkflows;XmlRpcWorkflowManagerClient.getWorkflows;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflows, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflows]
Intra-methodXMLWorkflowRepository.addTask;XMLWorkflowRepository.addTask;[Dispersed Coupling -> XMLWorkflowRepository.addTask, Feature Envy -> XMLWorkflowRepository.addTask]
