Concern-overloadorg.apache.oodt.cas.workflow.structs -> [Wkf-topic-8, Wkf-topic-2, Wkf-topic-1];org.apache.oodt.cas.workflow.structs -> [Wkf-topic-8, Wkf-topic-2, Wkf-topic-1];[Shotgun Surgery -> WorkflowCondition.getConditionInstanceClassName, Shotgun Surgery -> Workflow.setTasks, Shotgun Surgery -> WorkflowTask.setConditions, Shotgun Surgery -> WorkflowTaskConfiguration.getProperties, Shotgun Surgery -> WorkflowInstance.setSharedContext]
Concern-overloadorg.apache.oodt.cas.workflow.lifecycle -> [Wkf-topic-5, Wkf-topic-6];org.apache.oodt.cas.workflow.lifecycle -> [Wkf-topic-5, Wkf-topic-6];[Dispersed Coupling -> WorkflowLifecycleManager.getLifecycleForWorkflow, Dispersed Coupling -> WorkflowLifecyclesReader.addStagesToLifecycle]
Concern-overloadorg.apache.oodt.cas.workflow.engine -> [Wkf-topic-7, Wkf-topic-4];org.apache.oodt.cas.workflow.engine -> [Wkf-topic-7, Wkf-topic-4];[Dispersed Coupling -> NonBlockingThreadPoolWorkflowEngine.satisfied, Dispersed Coupling -> NonBlockingShepardThread.satisfied, Feature Envy -> NonBlockingIterativeWorkflowProcessorThread.executeTaskLocally, Feature Envy -> ThreadPoolWorkflowEngine.persistWorkflowInstance, Feature Envy -> IterativeWorkflowProcessorThread.executeTaskLocally]
Concern-overloadorg.apache.oodt.cas.workflow.repository -> [Wkf-topic-8, Wkf-topic-0, Wkf-topic-6];org.apache.oodt.cas.workflow.repository -> [Wkf-topic-8, Wkf-topic-0, Wkf-topic-6];[Dispersed Coupling -> XMLWorkflowRepository.loadEvents, Dispersed Coupling -> DataSourceWorkflowRepository.getRegisteredEvents, Feature Envy -> DataSourceWorkflowRepositoryFactory.DataSourceWorkflowRepositoryFactory]
Concern-overloadorg.apache.oodt.cas.workflow.instrepo -> [Wkf-topic-5, Wkf-topic-6, Wkf-topic-3];org.apache.oodt.cas.workflow.instrepo -> [Wkf-topic-5, Wkf-topic-6, Wkf-topic-3];[Dispersed Coupling -> MemoryWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstanceMetadata, Feature Envy -> WorkflowInstanceMetadataReader.readFields, Intensive Coupling -> LuceneWorkflowInstanceRepository.toWorkflowInstance, Intensive Coupling -> AbstractPaginatibleInstanceRepository.getPagedWorkflows, Shotgun Surgery -> WorkflowInstanceRepository.getWorkflowInstanceById]
Concern-overloadorg.apache.oodt.cas.workflow.examples -> [Wkf-topic-8, Wkf-topic-6];org.apache.oodt.cas.workflow.examples -> [Wkf-topic-8, Wkf-topic-6];[Dispersed Coupling -> ExternScriptTaskInstance.run, Feature Envy -> LongCondition.evaluate, Feature Envy -> LongTask.run, Feature Envy -> NumIncrementTask.run, Feature Envy -> RandomStatusUpdateTask.run]
HierarchicalIntensive CouplingAbstractPaginatibleInstanceRepository;Intensive Coupling -> AbstractPaginatibleInstanceRepository;[Intensive Coupling -> DataSourceWorkflowInstanceRepository.updateWorkflowInstance, Intensive Coupling -> LuceneWorkflowInstanceRepository.toWorkflowInstance, Intensive Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstance, Intensive Coupling -> AbstractPaginatibleInstanceRepository.getPagedWorkflows]
HierarchicalDispersed CouplingAbstractPaginatibleInstanceRepository;Dispersed Coupling -> AbstractPaginatibleInstanceRepository;[Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstances, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addTasksToDoc, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addConditionsToDoc, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addMetadataValue, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addInstanceMetadataToDoc, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstance, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceById, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> LuceneWorkflowInstanceRepository.paginateWorkflows]
HierarchicalFeature EnvyAbstractPaginatibleInstanceRepository;Feature Envy -> AbstractPaginatibleInstanceRepository;[Feature Envy -> MemoryWorkflowInstanceRepository.paginateWorkflows, Feature Envy -> LuceneWorkflowInstanceRepository.getWorkflowInstanceById, Feature Envy -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata]
HierarchicalRefused Parent BequestAbstractPaginatibleInstanceRepository;Refused Parent Bequest -> AbstractPaginatibleInstanceRepository;[Refused Parent Bequest -> MemoryWorkflowInstanceRepository, Refused Parent Bequest -> DataSourceWorkflowInstanceRepository, Refused Parent Bequest -> LuceneWorkflowInstanceRepository]
HierarchicalTradition BreakerAbstractPaginatibleInstanceRepository;Tradition Breaker -> AbstractPaginatibleInstanceRepository;[Tradition Breaker -> LuceneWorkflowInstanceRepository, Tradition Breaker -> DataSourceWorkflowInstanceRepository]
Intra-classWorkflowInstanceMetadataReader;WorkflowInstanceMetadataReader;[Dispersed Coupling -> WorkflowInstanceMetadataReader.parseMetMapFile, Feature Envy -> WorkflowInstanceMetadataReader.readFields]
Intra-classWorkflowLifecycleManager;WorkflowLifecycleManager;[Dispersed Coupling -> WorkflowLifecycleManager.getLifecycleForWorkflow, Feature Envy -> WorkflowLifecycleManager.getStage]
Intra-classThreadPoolWorkflowEngine;ThreadPoolWorkflowEngine;[Feature Envy -> ThreadPoolWorkflowEngine.persistWorkflowInstance, Feature Envy -> ThreadPoolWorkflowEngine.resumeWorkflowInstance, Feature Envy -> ThreadPoolWorkflowEngine.getWallClockMinutes, God Class -> ThreadPoolWorkflowEngine]
Intra-classWorkflowTask;WorkflowTask;[Shotgun Surgery -> WorkflowTask.setConditions, Shotgun Surgery -> WorkflowTask.setTaskConfig, Shotgun Surgery -> WorkflowTask.getTaskConfig, Shotgun Surgery -> WorkflowTask.getTaskName, Shotgun Surgery -> WorkflowTask.getTaskId, Shotgun Surgery -> WorkflowTask.getConditions]
Intra-classNonBlockingShepardThread;NonBlockingShepardThread;[Dispersed Coupling -> NonBlockingShepardThread.checkTaskRequiredMetadata, Dispersed Coupling -> NonBlockingShepardThread.satisfied, Feature Envy -> NonBlockingShepardThread.checkTaskRequiredMetadata, Intensive Coupling -> NonBlockingShepardThread.run]
Intra-classGenericWorkflowObjectFactory;GenericWorkflowObjectFactory;[Feature Envy -> GenericWorkflowObjectFactory.copyCondition, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowObjectFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getTaskObjectFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getConditionObjectFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowInstanceRepositoryFromClassName, Feature Envy -> GenericWorkflowObjectFactory.copyTask]
Intra-classXMLWorkflowRepository;XMLWorkflowRepository;[Dispersed Coupling -> XMLWorkflowRepository.loadEvents, Dispersed Coupling -> XMLWorkflowRepository.loadTasks, Dispersed Coupling -> XMLWorkflowRepository.loadConditions, Dispersed Coupling -> XMLWorkflowRepository.main, Dispersed Coupling -> XMLWorkflowRepository.loadWorkflows, God Class -> XMLWorkflowRepository]
Intra-classXmlRpcWorkflowManager;XmlRpcWorkflowManager;[Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflows, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowsByEvent, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowInstances, Dispersed Coupling -> XmlRpcWorkflowManager.handleEvent, Feature Envy -> XmlRpcWorkflowManager.populateWorkflows]
Intra-classMemoryWorkflowInstanceRepository;MemoryWorkflowInstanceRepository;[Dispersed Coupling -> MemoryWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getWorkflowInstancesByStatus, Feature Envy -> MemoryWorkflowInstanceRepository.paginateWorkflows, Refused Parent Bequest -> MemoryWorkflowInstanceRepository]
Intra-classXmlRpcWorkflowManagerClient;XmlRpcWorkflowManagerClient;[Brain Method -> XmlRpcWorkflowManagerClient.main, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflows, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getTaskById, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflows, Feature Envy -> XmlRpcWorkflowManagerClient.getFirstPage, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstanceById, Feature Envy -> XmlRpcWorkflowManagerClient.getConditionById, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowById, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.updateWorkflowInstance, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.updateMetadataForWorkflow, Feature Envy -> XmlRpcWorkflowManagerClient.getNextPage, Feature Envy -> XmlRpcWorkflowManagerClient.getLastPage, Feature Envy -> XmlRpcWorkflowManagerClient.getPrevPage, Feature Envy -> XmlRpcWorkflowManagerClient.sendEvent, Intensive Coupling -> XmlRpcWorkflowManagerClient.main]
Intra-classDbStructFactory;DbStructFactory;[Feature Envy -> DbStructFactory.getWorkflowTask, Feature Envy -> DbStructFactory.getWorkflowCondition, Feature Envy -> DbStructFactory.getWorkflow]
Intra-classNonBlockingThreadPoolWorkflowEngine;NonBlockingThreadPoolWorkflowEngine;[Dispersed Coupling -> NonBlockingThreadPoolWorkflowEngine.satisfied, Dispersed Coupling -> NonBlockingThreadPoolWorkflowEngine.checkTaskRequiredMetadata, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.getWallClockMinutes, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.checkTaskRequiredMetadata, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.NonBlockingThreadPoolWorkflowEngine, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.persistWorkflowInstance, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.resumeWorkflowInstance, God Class -> NonBlockingThreadPoolWorkflowEngine]
Intra-classDataSourceWorkflowInstanceRepository;DataSourceWorkflowInstanceRepository;[Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addMetadataValue, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstance, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceById, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstancesByStatus, Feature Envy -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Intensive Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstance, Intensive Coupling -> DataSourceWorkflowInstanceRepository.updateWorkflowInstance, Refused Parent Bequest -> DataSourceWorkflowInstanceRepository, Tradition Breaker -> DataSourceWorkflowInstanceRepository]
Intra-classLuceneWorkflowInstanceRepository;LuceneWorkflowInstanceRepository;[Dispersed Coupling -> LuceneWorkflowInstanceRepository.addInstanceMetadataToDoc, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addTasksToDoc, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addConditionsToDoc, Dispersed Coupling -> LuceneWorkflowInstanceRepository.paginateWorkflows, Feature Envy -> LuceneWorkflowInstanceRepository.getWorkflowInstanceById, God Class -> LuceneWorkflowInstanceRepository, Intensive Coupling -> LuceneWorkflowInstanceRepository.toWorkflowInstance, Refused Parent Bequest -> LuceneWorkflowInstanceRepository, Tradition Breaker -> LuceneWorkflowInstanceRepository]
Intra-classIterativeWorkflowProcessorThread;IterativeWorkflowProcessorThread;[Brain Method -> IterativeWorkflowProcessorThread.run, Dispersed Coupling -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Dispersed Coupling -> IterativeWorkflowProcessorThread.getTaskNameById, Dispersed Coupling -> IterativeWorkflowProcessorThread.satisfied, Feature Envy -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Feature Envy -> IterativeWorkflowProcessorThread.executeTaskLocally, God Class -> IterativeWorkflowProcessorThread, Intensive Coupling -> IterativeWorkflowProcessorThread.run]
Intra-classTestWorkflowRepository;TestWorkflowRepository;[Dispersed Coupling -> TestWorkflowRepository.testMultipleConditions, Feature Envy -> TestWorkflowRepository.validateBackwardsWorkflow, Feature Envy -> TestWorkflowRepository.testGetWorkflowsForEvent, Feature Envy -> TestWorkflowRepository.validateTaskConfiguration, Feature Envy -> TestWorkflowRepository.validateTaskCondition, Feature Envy -> TestWorkflowRepository.validateBackwardsWorkflowTasks]
Intra-classWorkflowLifecyclesReader;WorkflowLifecyclesReader;[Dispersed Coupling -> WorkflowLifecyclesReader.addStagesToLifecycle, Feature Envy -> WorkflowLifecyclesReader.readLifecycle]
Intra-classWorkflow;Workflow;[Shotgun Surgery -> Workflow.setTasks, Shotgun Surgery -> Workflow.getTasks, Shotgun Surgery -> Workflow.getName, Shotgun Surgery -> Workflow.getId]
Intra-classDataSourceWorkflowRepository;DataSourceWorkflowRepository;[Dispersed Coupling -> DataSourceWorkflowRepository.getConfigurationByConditionId, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowTaskById, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowsForEvent, Dispersed Coupling -> DataSourceWorkflowRepository.getConfigurationByTaskId, Dispersed Coupling -> DataSourceWorkflowRepository.getRegisteredEvents, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowById, Dispersed Coupling -> DataSourceWorkflowRepository.getTasksByWorkflowId, Dispersed Coupling -> DataSourceWorkflowRepository.getTasksByWorkflowName, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflows, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowByName, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowConditionById, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByTaskName, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByTaskId]
Intra-classTestLuceneWorkflowInstanceRepository;TestLuceneWorkflowInstanceRepository;[Intensive Coupling -> TestLuceneWorkflowInstanceRepository.testUpdateDocumentAndPreserveId, Intensive Coupling -> TestLuceneWorkflowInstanceRepository.TestLuceneWorkflowInstanceRepository]
Intra-classNonBlockingIterativeWorkflowProcessorThread;NonBlockingIterativeWorkflowProcessorThread;[Brain Method -> NonBlockingIterativeWorkflowProcessorThread.run, Dispersed Coupling -> NonBlockingIterativeWorkflowProcessorThread.getTaskNameById, Dispersed Coupling -> NonBlockingIterativeWorkflowProcessorThread.satisfied, Dispersed Coupling -> NonBlockingIterativeWorkflowProcessorThread.run, Feature Envy -> NonBlockingIterativeWorkflowProcessorThread.executeTaskLocally, God Class -> NonBlockingIterativeWorkflowProcessorThread]
Intra-classXmlStructFactory;XmlStructFactory;[Dispersed Coupling -> XmlStructFactory.getConfiguration, Feature Envy -> XmlStructFactory.getConfiguration, Feature Envy -> XmlStructFactory.getRequiredMetFields, Feature Envy -> XmlStructFactory.getSimpleElementText, Feature Envy -> XmlStructFactory.getWorkflowCondition, Intensive Coupling -> XmlStructFactory.getWorkflow, Intensive Coupling -> XmlStructFactory.getWorkflowTask]
Intra-classXmlRpcStructFactory;XmlRpcStructFactory;[Feature Envy -> XmlRpcStructFactory.getWorkflowInstancePageFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getWorkflowTaskFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflow, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowInstancePage, Feature Envy -> XmlRpcStructFactory.getWorkflowConditionFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowInstance, Feature Envy -> XmlRpcStructFactory.getWorkflowInstanceFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowTask, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowTaskConfiguration, Feature Envy -> XmlRpcStructFactory.getWorkflowFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowCondition]
Intra-classWorkflowInstance;WorkflowInstance;[Shotgun Surgery -> WorkflowInstance.getId, Shotgun Surgery -> WorkflowInstance.getWorkflow, Shotgun Surgery -> WorkflowInstance.setWorkflow, Shotgun Surgery -> WorkflowInstance.setStatus, Shotgun Surgery -> WorkflowInstance.getStatus, Shotgun Surgery -> WorkflowInstance.setSharedContext, Shotgun Surgery -> WorkflowInstance.getSharedContext, Shotgun Surgery -> WorkflowInstance.setCurrentTaskId, Shotgun Surgery -> WorkflowInstance.getCurrentTaskId]
Intra-classWorkflowCondition;WorkflowCondition;[Shotgun Surgery -> WorkflowCondition.getConditionInstanceClassName, Shotgun Surgery -> WorkflowCondition.getConditionName, Shotgun Surgery -> WorkflowCondition.getConditionId]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.repository;Dispersed Coupling -> org.apache.oodt.cas.workflow.repository;[Dispersed Coupling -> DataSourceWorkflowRepository.getConfigurationByConditionId, Dispersed Coupling -> XMLWorkflowRepository.loadEvents, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowTaskById, Dispersed Coupling -> DataSourceWorkflowRepository.getConfigurationByTaskId, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowsForEvent, Dispersed Coupling -> DataSourceWorkflowRepository.getRegisteredEvents, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowById, Dispersed Coupling -> DataSourceWorkflowRepository.getTasksByWorkflowId, Dispersed Coupling -> DataSourceWorkflowRepository.getTasksByWorkflowName, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflows, Dispersed Coupling -> XMLWorkflowRepository.loadTasks, Dispersed Coupling -> XMLWorkflowRepository.loadConditions, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowByName, Dispersed Coupling -> DataSourceWorkflowRepository.getWorkflowConditionById, Dispersed Coupling -> XMLWorkflowRepository.main, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByTaskName, Dispersed Coupling -> DataSourceWorkflowRepository.getConditionsByTaskId, Dispersed Coupling -> XMLWorkflowRepository.loadWorkflows]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.util;Feature Envy -> org.apache.oodt.cas.workflow.util;[Feature Envy -> DbStructFactory.getWorkflowTask, Feature Envy -> GenericWorkflowObjectFactory.copyCondition, Feature Envy -> XmlRpcStructFactory.getWorkflowTaskFromXmlRpc, Feature Envy -> DbStructFactory.getWorkflowCondition, Feature Envy -> XmlStructFactory.getRequiredMetFields, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowInstancePage, Feature Envy -> XmlStructFactory.getSimpleElementText, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowInstance, Feature Envy -> XmlRpcStructFactory.getWorkflowConditionFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getWorkflowInstanceFromXmlRpc, Feature Envy -> GenericWorkflowObjectFactory.getConditionObjectFromClassName, Feature Envy -> XmlRpcStructFactory.getWorkflowFromXmlRpc, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowTaskConfiguration, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowInstanceRepositoryFromClassName, Feature Envy -> XmlStructFactory.getWorkflowCondition, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowCondition, Feature Envy -> XmlRpcStructFactory.getWorkflowInstancePageFromXmlRpc, Feature Envy -> XmlStructFactory.getConfiguration, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflow, Feature Envy -> GenericWorkflowObjectFactory.getWorkflowObjectFromClassName, Feature Envy -> GenericWorkflowObjectFactory.getTaskObjectFromClassName, Feature Envy -> XmlRpcStructFactory.getXmlRpcWorkflowTask, Feature Envy -> DbStructFactory.getWorkflow, Feature Envy -> GenericWorkflowObjectFactory.copyTask]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.instrepo;Dispersed Coupling -> org.apache.oodt.cas.workflow.instrepo;[Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getNumWorkflowInstancesByStatus, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceMetadata, Dispersed Coupling -> WorkflowInstanceMetadataReader.parseMetMapFile, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getNumWorkflowInstances, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addTasksToDoc, Dispersed Coupling -> MemoryWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addConditionsToDoc, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addMetadataValue, Dispersed Coupling -> LuceneWorkflowInstanceRepository.addInstanceMetadataToDoc, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.removeWorkflowInstance, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstanceById, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstances, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.paginateWorkflows, Dispersed Coupling -> DataSourceWorkflowInstanceRepository.getWorkflowInstancesByStatus, Dispersed Coupling -> LuceneWorkflowInstanceRepository.paginateWorkflows]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.system;Dispersed Coupling -> org.apache.oodt.cas.workflow.system;[Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflows, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowsByEvent, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Dispersed Coupling -> XmlRpcWorkflowManager.getWorkflowInstances, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflows, Dispersed Coupling -> XmlRpcWorkflowManager.handleEvent, Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent]
Intra-componentBrain Methodorg.apache.oodt.cas.workflow.engine;Brain Method -> org.apache.oodt.cas.workflow.engine;[Brain Method -> NonBlockingIterativeWorkflowProcessorThread.run, Brain Method -> IterativeWorkflowProcessorThread.run]
Intra-componentIntensive Couplingorg.apache.oodt.cas.workflow.engine;Intensive Coupling -> org.apache.oodt.cas.workflow.engine;[Intensive Coupling -> IterativeWorkflowProcessorThread.run, Intensive Coupling -> NonBlockingShepardThread.run]
Intra-componentShotgun Surgeryorg.apache.oodt.cas.workflow.structs;Shotgun Surgery -> org.apache.oodt.cas.workflow.structs;[Shotgun Surgery -> WorkflowTask.setConditions, Shotgun Surgery -> WorkflowInstance.getWorkflow, Shotgun Surgery -> Workflow.getTasks, Shotgun Surgery -> WorkflowTask.setTaskConfig, Shotgun Surgery -> WorkflowInstance.setWorkflow, Shotgun Surgery -> WorkflowInstance.setStatus, Shotgun Surgery -> WorkflowTaskConfiguration.getProperties, Shotgun Surgery -> WorkflowTask.getTaskName, Shotgun Surgery -> WorkflowTask.getTaskId, Shotgun Surgery -> WorkflowInstance.getSharedContext, Shotgun Surgery -> WorkflowInstance.setCurrentTaskId, Shotgun Surgery -> WorkflowTask.getConditions, Shotgun Surgery -> WorkflowInstance.getCurrentTaskId, Shotgun Surgery -> WorkflowCondition.getConditionInstanceClassName, Shotgun Surgery -> Workflow.setTasks, Shotgun Surgery -> WorkflowCondition.getConditionName, Shotgun Surgery -> WorkflowInstance.getId, Shotgun Surgery -> WorkflowTask.getTaskConfig, Shotgun Surgery -> WorkflowInstance.getStatus, Shotgun Surgery -> WorkflowCondition.getConditionId, Shotgun Surgery -> Workflow.getName, Shotgun Surgery -> WorkflowInstance.setSharedContext, Shotgun Surgery -> Workflow.getId]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.engine;Feature Envy -> org.apache.oodt.cas.workflow.engine;[Feature Envy -> NonBlockingIterativeWorkflowProcessorThread.executeTaskLocally, Feature Envy -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.getWallClockMinutes, Feature Envy -> ThreadPoolWorkflowEngine.persistWorkflowInstance, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.checkTaskRequiredMetadata, Feature Envy -> NonBlockingShepardThread.checkTaskRequiredMetadata, Feature Envy -> IterativeWorkflowProcessorThread.executeTaskLocally, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.NonBlockingThreadPoolWorkflowEngine, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.persistWorkflowInstance, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.resumeWorkflowInstance, Feature Envy -> ThreadPoolWorkflowEngine.resumeWorkflowInstance, Feature Envy -> ThreadPoolWorkflowEngine.getWallClockMinutes]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.lifecycle;Dispersed Coupling -> org.apache.oodt.cas.workflow.lifecycle;[Dispersed Coupling -> WorkflowLifecycleManager.getLifecycleForWorkflow, Dispersed Coupling -> WorkflowLifecyclesReader.addStagesToLifecycle]
Intra-componentDispersed Couplingorg.apache.oodt.cas.workflow.engine;Dispersed Coupling -> org.apache.oodt.cas.workflow.engine;[Dispersed Coupling -> NonBlockingIterativeWorkflowProcessorThread.getTaskNameById, Dispersed Coupling -> NonBlockingThreadPoolWorkflowEngine.satisfied, Dispersed Coupling -> NonBlockingShepardThread.checkTaskRequiredMetadata, Dispersed Coupling -> NonBlockingIterativeWorkflowProcessorThread.satisfied, Dispersed Coupling -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Dispersed Coupling -> IterativeWorkflowProcessorThread.getTaskNameById, Dispersed Coupling -> IterativeWorkflowProcessorThread.satisfied, Dispersed Coupling -> NonBlockingIterativeWorkflowProcessorThread.run, Dispersed Coupling -> NonBlockingShepardThread.satisfied, Dispersed Coupling -> NonBlockingThreadPoolWorkflowEngine.checkTaskRequiredMetadata]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.system;Feature Envy -> org.apache.oodt.cas.workflow.system;[Feature Envy -> XmlRpcWorkflowManagerClient.getTaskById, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflows, Feature Envy -> XmlRpcWorkflowManagerClient.getFirstPage, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Feature Envy -> XmlRpcWorkflowManager.populateWorkflows, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstanceById, Feature Envy -> XmlRpcWorkflowManagerClient.getConditionById, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowById, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.updateWorkflowInstance, Feature Envy -> XmlRpcWorkflowManagerClient.paginateWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.updateMetadataForWorkflow, Feature Envy -> XmlRpcWorkflowManagerClient.getNextPage, Feature Envy -> XmlRpcWorkflowManagerClient.getLastPage, Feature Envy -> XmlRpcWorkflowManagerClient.getPrevPage, Feature Envy -> XmlRpcWorkflowManagerClient.sendEvent]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.examples;Feature Envy -> org.apache.oodt.cas.workflow.examples;[Feature Envy -> LongCondition.evaluate, Feature Envy -> LongTask.run, Feature Envy -> NumIncrementTask.run, Feature Envy -> RandomStatusUpdateTask.run]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.instrepo;Feature Envy -> org.apache.oodt.cas.workflow.instrepo;[Feature Envy -> MemoryWorkflowInstanceRepository.paginateWorkflows, Feature Envy -> LuceneWorkflowInstanceRepository.getWorkflowInstanceById, Feature Envy -> WorkflowInstanceMetadataReader.readFields, Feature Envy -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.lifecycle;Feature Envy -> org.apache.oodt.cas.workflow.lifecycle;[Feature Envy -> WorkflowLifecyclesReader.readLifecycle, Feature Envy -> WorkflowLifecycleManager.getStage]
Intra-componentFeature Envyorg.apache.oodt.cas.workflow.repository;Feature Envy -> org.apache.oodt.cas.workflow.repository;[Feature Envy -> TestWorkflowRepository.validateBackwardsWorkflow, Feature Envy -> TestWorkflowRepository.testGetWorkflowsForEvent, Feature Envy -> TestWorkflowRepository.validateTaskConfiguration, Feature Envy -> TestWorkflowRepository.validateTaskCondition, Feature Envy -> TestWorkflowRepository.validateBackwardsWorkflowTasks]
Intra-componentIntensive Couplingorg.apache.oodt.cas.workflow.instrepo;Intensive Coupling -> org.apache.oodt.cas.workflow.instrepo;[Intensive Coupling -> TestLuceneWorkflowInstanceRepository.testUpdateDocumentAndPreserveId, Intensive Coupling -> TestLuceneWorkflowInstanceRepository.TestLuceneWorkflowInstanceRepository]
Intra-componentTradition Breakerorg.apache.oodt.cas.workflow.instrepo;Tradition Breaker -> org.apache.oodt.cas.workflow.instrepo;[Tradition Breaker -> LuceneWorkflowInstanceRepository, Tradition Breaker -> DataSourceWorkflowInstanceRepository]
Intra-componentIntensive Couplingorg.apache.oodt.cas.workflow.instrepo;Intensive Coupling -> org.apache.oodt.cas.workflow.instrepo;[Intensive Coupling -> DataSourceWorkflowInstanceRepository.updateWorkflowInstance, Intensive Coupling -> LuceneWorkflowInstanceRepository.toWorkflowInstance, Intensive Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstance, Intensive Coupling -> AbstractPaginatibleInstanceRepository.getPagedWorkflows]
Intra-componentRefused Parent Bequestorg.apache.oodt.cas.workflow.instrepo;Refused Parent Bequest -> org.apache.oodt.cas.workflow.instrepo;[Refused Parent Bequest -> MemoryWorkflowInstanceRepository, Refused Parent Bequest -> DataSourceWorkflowInstanceRepository, Refused Parent Bequest -> LuceneWorkflowInstanceRepository]
Intra-componentIntensive Couplingorg.apache.oodt.cas.workflow.util;Intensive Coupling -> org.apache.oodt.cas.workflow.util;[Intensive Coupling -> XmlStructFactory.getWorkflow, Intensive Coupling -> XmlStructFactory.getWorkflowTask]
Intra-componentGod Classorg.apache.oodt.cas.workflow.engine;God Class -> org.apache.oodt.cas.workflow.engine;[God Class -> NonBlockingThreadPoolWorkflowEngine, God Class -> NonBlockingIterativeWorkflowProcessorThread, God Class -> IterativeWorkflowProcessorThread, God Class -> ThreadPoolWorkflowEngine]
Intra-methodXmlRpcWorkflowManagerClient.main;XmlRpcWorkflowManagerClient.main;[Brain Method -> XmlRpcWorkflowManagerClient.main, Intensive Coupling -> XmlRpcWorkflowManagerClient.main]
Intra-methodXmlRpcWorkflowManagerClient.getWorkflowInstances;XmlRpcWorkflowManagerClient.getWorkflowInstances;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstances, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstances]
Intra-methodXmlRpcWorkflowManagerClient.getWorkflows;XmlRpcWorkflowManagerClient.getWorkflows;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflows, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflows]
Intra-methodNonBlockingShepardThread.checkTaskRequiredMetadata;NonBlockingShepardThread.checkTaskRequiredMetadata;[Dispersed Coupling -> NonBlockingShepardThread.checkTaskRequiredMetadata, Feature Envy -> NonBlockingShepardThread.checkTaskRequiredMetadata]
Intra-methodDataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata;DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata;[Dispersed Coupling -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata, Feature Envy -> DataSourceWorkflowInstanceRepository.addWorkflowInstanceMetadata]
Intra-methodIterativeWorkflowProcessorThread.run;IterativeWorkflowProcessorThread.run;[Brain Method -> IterativeWorkflowProcessorThread.run, Intensive Coupling -> IterativeWorkflowProcessorThread.run]
Intra-methodXmlStructFactory.getConfiguration;XmlStructFactory.getConfiguration;[Dispersed Coupling -> XmlStructFactory.getConfiguration, Feature Envy -> XmlStructFactory.getConfiguration]
Intra-methodXmlRpcWorkflowManagerClient.getWorkflowsByEvent;XmlRpcWorkflowManagerClient.getWorkflowsByEvent;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowsByEvent]
Intra-methodXmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus;XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus;[Dispersed Coupling -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus, Feature Envy -> XmlRpcWorkflowManagerClient.getWorkflowInstancesByStatus]
Intra-methodNonBlockingIterativeWorkflowProcessorThread.run;NonBlockingIterativeWorkflowProcessorThread.run;[Brain Method -> NonBlockingIterativeWorkflowProcessorThread.run, Dispersed Coupling -> NonBlockingIterativeWorkflowProcessorThread.run]
Intra-methodIterativeWorkflowProcessorThread.checkTaskRequiredMetadata;IterativeWorkflowProcessorThread.checkTaskRequiredMetadata;[Dispersed Coupling -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata, Feature Envy -> IterativeWorkflowProcessorThread.checkTaskRequiredMetadata]
Intra-methodNonBlockingThreadPoolWorkflowEngine.checkTaskRequiredMetadata;NonBlockingThreadPoolWorkflowEngine.checkTaskRequiredMetadata;[Dispersed Coupling -> NonBlockingThreadPoolWorkflowEngine.checkTaskRequiredMetadata, Feature Envy -> NonBlockingThreadPoolWorkflowEngine.checkTaskRequiredMetadata]
